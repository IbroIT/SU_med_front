import React, { useState, useEffect } from "react";
import { useTranslation } from "react-i18next";

const AdmissionProcess = () => {
  const { t } = useTranslation();
  const [isVisible, setIsVisible] = useState(false);
  const [activeSection, setActiveSection] = useState("process");

  // Animation on mount
  useEffect(() => {
    setIsVisible(true);
  }, []);

  // Sections data
  const sectionsData = {
    process: {
      title: t("admissionProcess.processTitle", "–ü—Ä–æ—Ü–µ—Å—Å –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è"),
      description: t("admissionProcess.processDescription", "–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –≤ –í—ã—Å—à—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —à–∫–æ–ª—É"),
      content: "process"
    },
    documents: {
      title: t("admissionProcess.requiredDocumentsTitle", "–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"),
      description: t("admissionProcess.documentsDescription", "–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è"),
      content: "documents"
    },
    deadlines: {
      title: t("admissionProcess.deadlinesTitle", "–í–∞–∂–Ω—ã–µ —Å—Ä–æ–∫–∏"),
      description: t("admissionProcess.deadlinesDescription", "–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–µ–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –∏ –≤–∞–∂–Ω—ã–µ –¥–∞—Ç—ã"),
      content: "deadlines"
    },
    contact: {
      title: t("admissionProcess.contactTitle", "–ö–æ–Ω—Ç–∞–∫—Ç—ã"),
      description: t("admissionProcess.contactDescription", "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏"),
      content: "contact"
    }
  };

  // Sections list for navigation
  const sectionsList = [
    { id: "process", name: t("admissionProcess.processNav", "–ü—Ä–æ—Ü–µ—Å—Å") },
    { id: "documents", name: t("admissionProcess.documentsNav", "–î–æ–∫—É–º–µ–Ω—Ç—ã") },
    { id: "deadlines", name: t("admissionProcess.deadlinesNav", "–°—Ä–æ–∫–∏") },
    { id: "contact", name: t("admissionProcess.contactNav", "–ö–æ–Ω—Ç–∞–∫—Ç—ã") }
  ];

  // Get current section data
  const getCurrentSectionData = () => {
    return sectionsData[activeSection] || sectionsData.process;
  };

  const currentSectionData = getCurrentSectionData();

  // Admission steps data
  const admissionSteps = [
    {
      id: 1,
      title: t("admissionProcess.step1Title", "–ü–æ–¥–∞—á–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"),
      description: t("admissionProcess.step1Desc", "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –ø–æ–¥–∞—á–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"),
      icon: "üìù",
      details: t("admissionProcess.step1Details", "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏"),
      documents: [
        t("admissionProcess.passport", "–ü–∞—Å–ø–æ—Ä—Ç –∏–ª–∏ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏"),
        t("admissionProcess.diploma", "–ê—Ç—Ç–µ—Å—Ç–∞—Ç –æ —Å—Ä–µ–¥–Ω–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏"),
        t("admissionProcess.photos", "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3x4"),
        t("admissionProcess.medicalCert", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞")
      ]
    },
    {
      id: 2,
      title: t("admissionProcess.step2Title", "–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã"),
      description: t("admissionProcess.step2Desc", "–°–¥–∞—á–∞ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π"),
      icon: "üéì",
      details: t("admissionProcess.step2Details", "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–∞–º –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º"),
      subjects: [
        t("admissionProcess.biology", "–ë–∏–æ–ª–æ–≥–∏—è"),
        t("admissionProcess.chemistry", "–•–∏–º–∏—è"),
        t("admissionProcess.language", "–Ø–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è")
      ]
    },
    {
      id: 3,
      title: t("admissionProcess.step3Title", "–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ"),
      description: t("admissionProcess.step3Desc", "–õ–∏—á–Ω–æ–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ —Å –∫–æ–º–∏—Å—Å–∏–µ–π"),
      icon: "üí¨",
      details: t("admissionProcess.step3Details", "–û—Ü–µ–Ω–∫–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–∏, –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç–∏"),
      criteria: [
        t("admissionProcess.motivation", "–ú–æ—Ç–∏–≤–∞—Ü–∏—è –∫ –æ–±—É—á–µ–Ω–∏—é"),
        t("admissionProcess.communication", "–ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏"),
        t("admissionProcess.aptitude", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å")
      ]
    },
    {
      id: 4,
      title: t("admissionProcess.step4Title", "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è"),
      description: t("admissionProcess.step4Desc", "–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"),
      icon: "üìã",
      details: t("admissionProcess.step4Details", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å–ø—ã—Ç–∞–Ω–∏–π"),
      checks: [
        t("admissionProcess.documentsCheck", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"),
        t("admissionProcess.resultsCheck", "–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"),
        t("admissionProcess.quotaCheck", "–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–≤–æ—Ç–∞–º")
      ]
    },
    {
      id: 5,
      title: t("admissionProcess.step5Title", "–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ"),
      description: t("admissionProcess.step5Desc", "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ"),
      icon: "üéâ",
      details: t("admissionProcess.step5Details", "–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –≤ —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ"),
      actions: [
        t("admissionProcess.payment", "–û–ø–ª–∞—Ç–∞ –æ–±—É—á–µ–Ω–∏—è"),
        t("admissionProcess.registration", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"),
        t("admissionProcess.orientation", "–í–≤–æ–¥–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–∫—Ç–∞–∂")
      ]
    }
  ];

  // Required documents data
  const requiredDocuments = [
    {
      category: t("admissionProcess.identityDocs", "–î–æ–∫—É–º–µ–Ω—Ç—ã, —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–µ –ª–∏—á–Ω–æ—Å—Ç—å"),
      items: [
        t("admissionProcess.passport", "–ü–∞—Å–ø–æ—Ä—Ç –∏–ª–∏ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏"),
        t("admissionProcess.birthCertificate", "–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏"),
        t("admissionProcess.idPhotos", "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3x4 —Å–º")
      ]
    },
    {
      category: t("admissionProcess.educationDocs", "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"),
      items: [
        t("admissionProcess.highSchoolDiploma", "–ê—Ç—Ç–µ—Å—Ç–∞—Ç –æ —Å—Ä–µ–¥–Ω–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏"),
        t("admissionProcess.transcript", "–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞"),
        t("admissionProcess.universityDiploma", "–î–∏–ø–ª–æ–º –æ –≤—ã—Å—à–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏")
      ]
    },
    {
      category: t("admissionProcess.medicalDocs", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"),
      items: [
        t("admissionProcess.healthCertificate", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞"),
        t("admissionProcess.vaccinationCard", "–ü—Ä–∏–≤–∏–≤–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"),
        t("admissionProcess.fluorography", "–§–ª—é–æ—Ä–æ–≥—Ä–∞—Ñ–∏—è")
      ]
    },
    {
      category: t("admissionProcess.otherDocs", "–ü—Ä–æ—á–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"),
      items: [
        t("admissionProcess.militaryCard", "–í–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç"),
        t("admissionProcess.applicationForm", "–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ"),
        t("admissionProcess.recommendationLetters", "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∏—Å—å–º–∞")
      ]
    }
  ];

  // Deadlines data
  const deadlines = [
    {
      period: t("admissionProcess.june", "–ò—é–Ω—å"),
      events: [
        t("admissionProcess.juneEvent1", "–ù–∞—á–∞–ª–æ –ø—Ä–∏–µ–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"),
        t("admissionProcess.juneEvent2", "–î–µ–¥–ª–∞–π–Ω —Ä–∞–Ω–Ω–µ–π –ø–æ–¥–∞—á–∏")
      ]
    },
    {
      period: t("admissionProcess.july", "–ò—é–ª—å"),
      events: [
        t("admissionProcess.julyEvent1", "–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã"),
        t("admissionProcess.julyEvent2", "–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è")
      ]
    },
    {
      period: t("admissionProcess.august", "–ê–≤–≥—É—Å—Ç"),
      events: [
        t("admissionProcess.augustEvent1", "–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"),
        t("admissionProcess.augustEvent2", "–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ")
      ]
    }
  ];

  // Contact information
  const contactInfo = [
    {
      icon: "üìû",
      title: t("admissionProcess.phone", "–¢–µ–ª–µ—Ñ–æ–Ω"),
      details: [
        "+996 (312) 123-456",
        "+996 (312) 123-457"
      ]
    },
    {
      icon: "‚úâÔ∏è",
      title: t("admissionProcess.email", "Email"),
      details: [
        "admission@medical.edu",
        "info@medical.edu"
      ]
    },
    {
      icon: "üè¢",
      title: t("admissionProcess.address", "–ê–¥—Ä–µ—Å"),
      details: [
        t("admissionProcess.addressValue", "–≥. –ë–∏—à–∫–µ–∫, —É–ª. –ê—Ö—É–Ω–±–∞–µ–≤–∞ 92")
      ]
    },
    {
      icon: "üïí",
      title: t("admissionProcess.hours", "–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã"),
      details: [
        t("admissionProcess.hoursValue", "–ü–Ω-–ü—Ç: 9:00-18:00")
      ]
    }
  ];

  // FAQ data
  const faqData = [
    {
      question: t("admissionProcess.faq1Question", "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è?"),
      answer: t("admissionProcess.faq1Answer", "–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É–∫–∞–∑–∞–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ '–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã'")
    },
    {
      question: t("admissionProcess.faq2Question", "–ö–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø—Ä–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤?"),
      answer: t("admissionProcess.faq2Answer", "–ü—Ä–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ –∏—é–Ω–µ, —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ '–í–∞–∂–Ω—ã–µ —Å—Ä–æ–∫–∏'")
    },
    {
      question: t("admissionProcess.faq3Question", "–ö–∞–∫–∏–µ —ç–∫–∑–∞–º–µ–Ω—ã –Ω—É–∂–Ω–æ —Å–¥–∞–≤–∞—Ç—å?"),
      answer: t("admissionProcess.faq3Answer", "–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã –≤–∫–ª—é—á–∞—é—Ç –±–∏–æ–ª–æ–≥–∏—é, —Ö–∏–º–∏—é –∏ —è–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è")
    },
    {
      question: t("admissionProcess.faq4Question", "–ï—Å—Ç—å –ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã?"),
      answer: t("admissionProcess.faq4Answer", "–î–∞, –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Å –º–∞—è –ø–æ –∏—é–Ω—å")
    }
  ];

  return (
    <div
      className={`min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8 px-4 transition-all duration-700 ${
        isVisible ? "opacity-100 translate-y-0" : "opacity-0 translate-y-10"
      }`}
    >
      <div className="max-w-7xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            {t("admissionProcess.heroTitle", "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –í–ú–®")}
          </h1>
          <p className="text-lg text-gray-700 max-w-3xl mx-auto">
            {t("admissionProcess.heroSubtitle", "–°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –≤–µ–¥—É—â–µ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —à–∫–æ–ª—ã –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–∞")}
          </p>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <div className="bg-gradient-to-br from-blue-500 to-cyan-500 rounded-2xl p-6 text-white shadow-lg text-center">
            <div className="text-3xl font-bold mb-2">5</div>
            <div className="text-sm">{t("admissionProcess.steps", "–≠—Ç–∞–ø–æ–≤")}</div>
          </div>
          <div className="bg-gradient-to-br from-purple-500 to-pink-500 rounded-2xl p-6 text-white shadow-lg text-center">
            <div className="text-3xl font-bold mb-2">3</div>
            <div className="text-sm">{t("admissionProcess.months", "–ú–µ—Å—è—Ü–∞")}</div>
          </div>
          <div className="bg-gradient-to-br from-green-500 to-emerald-500 rounded-2xl p-6 text-white shadow-lg text-center">
            <div className="text-3xl font-bold mb-2">100%</div>
            <div className="text-sm">{t("admissionProcess.transparent", "–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å")}</div>
          </div>
          <div className="bg-gradient-to-br from-orange-500 to-red-500 rounded-2xl p-6 text-white shadow-lg text-center">
            <div className="text-3xl font-bold mb-2">24/7</div>
            <div className="text-sm">{t("admissionProcess.support", "–ü–æ–¥–¥–µ—Ä–∂–∫–∞")}</div>
          </div>
        </div>

        <div className="flex flex-col lg:flex-row gap-6">
          {/* –ë–æ–∫–æ–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
          <div className="lg:w-1/4">
            <div className="bg-white rounded-xl shadow-lg overflow-hidden sticky top-6">
              <div className="bg-gradient-to-r from-blue-600 to-indigo-700 p-4 text-white font-bold text-lg">
                {t("admissionProcess.navigation", "–ù–∞–≤–∏–≥–∞—Ü–∏—è")}
              </div>
              <nav className="p-2">
                <ul className="space-y-1">
                  {sectionsList.map((section) => (
                    <li key={section.id}>
                      <button
                        className={`w-full text-left px-4 py-3 rounded-lg transition-all duration-300 ${
                          activeSection === section.id
                            ? "bg-blue-100 text-blue-700 font-medium shadow-sm"
                            : "text-gray-700 hover:bg-gray-100"
                        }`}
                        onClick={() => setActiveSection(section.id)}
                      >
                        {section.name}
                      </button>
                    </li>
                  ))}
                </ul>
              </nav>
            </div>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
          <div className="lg:w-3/4">
            <div className="bg-white rounded-xl shadow-xl p-6 transition-all duration-500">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞ */}
              <div className="mb-6 pb-4 border-b border-gray-200">
                <h2 className="text-2xl md:text-3xl font-bold text-gray-800">
                  {currentSectionData.title}
                </h2>
                <p className="text-gray-600 mt-2">
                  {currentSectionData.description}
                </p>
              </div>

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–¥–µ–ª–∞ - –ü—Ä–æ—Ü–µ—Å—Å */}
              {activeSection === "process" && (
                <div className="space-y-8">
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {admissionSteps.map((step, index) => (
                      <div
                        key={step.id}
                        className="bg-gradient-to-br from-white to-blue-50 rounded-xl shadow-md overflow-hidden border border-blue-100 hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1"
                        style={{ animationDelay: `${index * 100}ms` }}
                      >
                        <div className="p-6">
                          <div className="flex items-center mb-4">
                            <div className="text-3xl mr-4">{step.icon}</div>
                            <div>
                              <h3 className="font-bold text-lg text-gray-900">
                                {step.title}
                              </h3>
                              <p className="text-blue-600 text-sm">
                                {step.description}
                              </p>
                            </div>
                          </div>
                          
                          <p className="text-gray-700 text-sm mb-4">
                            {step.details}
                          </p>

                          {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —à–∞–≥–∞ */}
                          <div className="space-y-3">
                            {step.documents && (
                              <div>
                                <h4 className="text-sm font-semibold text-gray-800 mb-2">
                                  {t("admissionProcess.requiredDocuments", "–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã")}
                                </h4>
                                <ul className="space-y-1">
                                  {step.documents.map((doc, idx) => (
                                    <li key={idx} className="flex items-center text-gray-600 text-xs">
                                      <span className="w-1.5 h-1.5 bg-blue-500 rounded-full mr-2"></span>
                                      {doc}
                                    </li>
                                  ))}
                                </ul>
                              </div>
                            )}

                            {step.subjects && (
                              <div>
                                <h4 className="text-sm font-semibold text-gray-800 mb-2">
                                  {t("admissionProcess.examSubjects", "–ü—Ä–µ–¥–º–µ—Ç—ã —ç–∫–∑–∞–º–µ–Ω–∞")}
                                </h4>
                                <div className="space-y-1">
                                  {step.subjects.map((subject, idx) => (
                                    <div key={idx} className="bg-white rounded px-2 py-1 text-xs text-gray-600 border">
                                      {subject}
                                    </div>
                                  ))}
                                </div>
                              </div>
                            )}

                            {step.criteria && (
                              <div>
                                <h4 className="text-sm font-semibold text-gray-800 mb-2">
                                  {t("admissionProcess.interviewCriteria", "–ö—Ä–∏—Ç–µ—Ä–∏–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è")}
                                </h4>
                                <div className="space-y-1">
                                  {step.criteria.map((criterion, idx) => (
                                    <div key={idx} className="bg-white rounded px-2 py-1 text-xs text-gray-600 border">
                                      {criterion}
                                    </div>
                                  ))}
                                </div>
                              </div>
                            )}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–¥–µ–ª–∞ - –î–æ–∫—É–º–µ–Ω—Ç—ã */}
              {activeSection === "documents" && (
                <div className="space-y-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {requiredDocuments.map((category, index) => (
                      <div
                        key={index}
                        className="bg-gradient-to-br from-white to-purple-50 rounded-xl shadow-md border border-purple-100 p-6"
                        style={{ animationDelay: `${index * 100}ms` }}
                      >
                        <h3 className="text-lg font-bold text-gray-800 mb-4">
                          {category.category}
                        </h3>
                        <ul className="space-y-3">
                          {category.items.map((item, idx) => (
                            <li key={idx} className="flex items-start text-gray-700">
                              <span className="text-purple-500 mr-2 mt-1">‚Ä¢</span>
                              <span className="text-sm">{item}</span>
                            </li>
                          ))}
                        </ul>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–¥–µ–ª–∞ - –°—Ä–æ–∫–∏ */}
              {activeSection === "deadlines" && (
                <div className="space-y-6">
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                    {deadlines.map((deadline, index) => (
                      <div
                        key={index}
                        className="bg-gradient-to-br from-white to-green-50 rounded-xl shadow-md border border-green-100 p-6 text-center"
                        style={{ animationDelay: `${index * 100}ms` }}
                      >
                        <div className="text-xl font-bold text-green-600 mb-4">
                          {deadline.period}
                        </div>
                        <div className="space-y-3">
                          {deadline.events.map((event, idx) => (
                            <div key={idx} className="bg-white rounded-lg p-3 text-sm text-gray-700 border">
                              {event}
                            </div>
                          ))}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–¥–µ–ª–∞ - –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
              {activeSection === "contact" && (
                <div className="space-y-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {contactInfo.map((contact, index) => (
                      <div
                        key={index}
                        className="bg-gradient-to-br from-white to-blue-50 rounded-xl shadow-md border border-blue-100 p-6"
                        style={{ animationDelay: `${index * 100}ms` }}
                      >
                        <div className="flex items-center mb-4">
                          <div className="text-2xl mr-4">{contact.icon}</div>
                          <h3 className="text-lg font-bold text-gray-800">
                            {contact.title}
                          </h3>
                        </div>
                        <div className="space-y-2">
                          {contact.details.map((detail, idx) => (
                            <p key={idx} className="text-gray-700 text-sm">
                              {detail}
                            </p>
                          ))}
                        </div>
                      </div>
                    ))}
                  </div>

                  {/* FAQ Section */}
                  <div className="mt-8 pt-6 border-t border-gray-200">
                    <h3 className="text-xl font-bold text-gray-800 mb-6">
                      {t("admissionProcess.faqTitle", "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")}
                    </h3>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      {faqData.map((faq, index) => (
                        <div
                          key={index}
                          className="bg-gradient-to-br from-white to-orange-50 rounded-xl p-4 border border-orange-100"
                        >
                          <h4 className="font-semibold text-gray-800 mb-2">
                            {faq.question}
                          </h4>
                          <p className="text-gray-600 text-sm">
                            {faq.answer}
                          </p>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdmissionProcess;