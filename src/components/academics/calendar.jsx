import { useState } from 'react';
import { Link } from 'react-router-dom';
import FullCalendar from '@fullcalendar/react';
import dayGridPlugin from '@fullcalendar/daygrid';
import timeGridPlugin from '@fullcalendar/timegrid';
import listPlugin from '@fullcalendar/list';
import interactionPlugin from '@fullcalendar/interaction';
import ky from 'ky';
import './Calendar.css';

const Calendar = () => {
  const [calendarView, setCalendarView] = useState('dayGridMonth');

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
  const calendarEvents = [
    {
      id: 1,
      title: '–û—Å–µ–Ω–Ω–∏–π —Å–µ–º–µ—Å—Ç—Ä',
      start: '2024-09-01',
      end: '2024-12-20',
      color: '#3B82F6',
      type: '–£—á–µ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
      description: '–ù–∞—á–∞–ª–æ –æ—Å–µ–Ω–Ω–µ–≥–æ —Å–µ–º–µ—Å—Ç—Ä–∞ 2024-2025 —É—á–µ–±–Ω–æ–≥–æ –≥–æ–¥–∞'
    },
    {
      id: 2,
      title: '–û—Å–µ–Ω–Ω—è—è —Å–µ—Å—Å–∏—è',
      start: '2024-12-23',
      end: '2025-01-10',
      color: '#EF4444',
      type: '–≠–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è',
      description: '–≠–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –æ—Å–µ–Ω–Ω–µ–≥–æ —Å–µ–º–µ—Å—Ç—Ä–∞'
    },
    {
      id: 3,
      title: '–ó–∏–º–Ω–∏–µ –∫–∞–Ω–∏–∫—É–ª—ã',
      start: '2025-01-11',
      end: '2025-02-02',
      color: '#10B981',
      type: '–ö–∞–Ω–∏–∫—É–ª—ã',
      description: '–ó–∏–º–Ω–∏–µ –∫–∞–Ω–∏–∫—É–ª—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤'
    },
    {
      id: 4,
      title: '–í–µ—Å–µ–Ω–Ω–∏–π —Å–µ–º–µ—Å—Ç—Ä',
      start: '2025-02-03',
      end: '2025-05-20',
      color: '#3B82F6',
      type: '–£—á–µ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
      description: '–ù–∞—á–∞–ª–æ –≤–µ—Å–µ–Ω–Ω–µ–≥–æ —Å–µ–º–µ—Å—Ç—Ä–∞'
    },
    {
      id: 5,
      title: '–ù–∞—É—á–Ω–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è',
      start: '2025-03-15',
      end: '2025-03-17',
      color: '#8B5CF6',
      type: '–ù–∞—É—á–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
      description: '–ï–∂–µ–≥–æ–¥–Ω–∞—è –Ω–∞—É—á–Ω–æ-–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è'
    },
    {
      id: 6,
      title: '–í–µ—Å–µ–Ω–Ω—è—è —Å–µ—Å—Å–∏—è',
      start: '2025-05-23',
      end: '2025-06-15',
      color: '#EF4444',
      type: '–≠–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è',
      description: '–≠–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –≤–µ—Å–µ–Ω–Ω–µ–≥–æ —Å–µ–º–µ—Å—Ç—Ä–∞'
    },
    {
      id: 7,
      title: '–õ–µ—Ç–Ω–∏–µ –∫–∞–Ω–∏–∫—É–ª—ã',
      start: '2025-06-16',
      end: '2025-08-31',
      color: '#10B981',
      type: '–ö–∞–Ω–∏–∫—É–ª—ã',
      description: '–õ–µ—Ç–Ω–∏–µ –∫–∞–Ω–∏–∫—É–ª—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤'
    },
    {
      id: 8,
      title: '–î–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π',
      start: '2025-04-12T10:00:00',
      end: '2025-04-12T16:00:00',
      color: '#8B5CF6',
      type: '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
      description: '–î–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤'
    },
    {
      id: 9,
      title: '–ó–∞—â–∏—Ç–∞ –¥–∏–ø–ª–æ–º–æ–≤',
      start: '2025-06-20',
      end: '2025-06-25',
      color: '#F59E0B',
      type: '–ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è',
      description: '–ó–∞—â–∏—Ç–∞ –≤—ã–ø—É—Å–∫–Ω—ã—Ö –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç'
    }
  ];

  // –õ–µ–≥–µ–Ω–¥–∞ —Å–æ–±—ã—Ç–∏–π
  const eventTypes = [
    { color: '#3B82F6', label: '–£—á–µ–±–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã', icon: 'üîµ' },
    { color: '#EF4444', label: '–≠–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏', icon: 'üî¥' },
    { color: '#10B981', label: '–ö–∞–Ω–∏–∫—É–ª—ã', icon: 'üü¢' },
    { color: '#8B5CF6', label: '–ù–∞—É—á–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', icon: 'üü£' },
    { color: '#F59E0B', label: '–ê—Ç—Ç–µ—Å—Ç–∞—Ü–∏—è', icon: 'üü†' }
  ];

  // –≠–∫—Å–ø–æ—Ä—Ç –≤ Google Calendar
  const exportToGoogleCalendar = (event) => {
    const start = event.startStr.split('T')[0];
    const end = event.endStr ? event.endStr.split('T')[0] : start;
    
    const googleUrl = `https://www.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(event.title)}&dates=${start.replace(/-/g, '')}/${end.replace(/-/g, '')}&details=${encodeURIComponent(event.extendedProps.description)}`;
    
    window.open(googleUrl, '_blank');
  };

  // –≠–∫—Å–ø–æ—Ä—Ç –≤ ICS —Ñ–∞–π–ª
  const exportToICS = (event) => {
    const icsContent = `BEGIN:VCALENDAR
VERSION:2.0
BEGIN:VEVENT
SUMMARY:${event.title}
DTSTART:${event.startStr.replace(/-/g, '').replace(/:/g, '')}
DTEND:${event.endStr ? event.endStr.replace(/-/g, '').replace(/:/g, '') : event.startStr.replace(/-/g, '').replace(/:/g, '')}
DESCRIPTION:${event.extendedProps.description}
END:VEVENT
END:VCALENDAR`;

    const blob = new Blob([icsContent], { type: 'text/calendar' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${event.title}.ics`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  // –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä —Å–æ–±—ã—Ç–∏–π
  const eventContent = (eventInfo) => {
    return (
      <div className="flex items-center p-1">
        <div className="w-2 h-2 rounded-full mr-2" style={{ backgroundColor: eventInfo.event.backgroundColor }}></div>
        <div className="flex-1 min-w-0">
          <div className="text-sm font-medium truncate">{eventInfo.event.title}</div>
          <div className="text-xs opacity-75 truncate">{eventInfo.timeText}</div>
        </div>
      </div>
    );
  };

  // –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è –≤ —Å–ø–∏—Å–∫–µ
  const eventContentList = (eventInfo) => {
    return (
      <div className="flex items-center p-2">
        <div className="w-3 h-3 rounded-full mr-3" style={{ backgroundColor: eventInfo.event.backgroundColor }}></div>
        <div className="flex-1">
          <div className="font-medium">{eventInfo.event.title}</div>
          <div className="text-sm text-gray-600">{eventInfo.event.extendedProps.description}</div>
        </div>
        <div className="text-sm text-gray-500 ml-4">{eventInfo.timeText}</div>
      </div>
    );
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ */}
        <nav className="text-sm text-gray-600 mb-8">
          <Link to="/" className="hover:text-blue-600">–ì–ª–∞–≤–Ω–∞—è</Link>
          <span className="mx-2">‚Üí</span>
          <Link to="/academics" className="hover:text-blue-600">–ê–∫–∞–¥–µ–º–∏–∫–∏</Link>
          <span className="mx-2">‚Üí</span>
          <span className="text-gray-800">–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å</span>
        </nav>

        <h1 className="text-3xl font-bold text-gray-800 mb-8">–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å</h1>

        {/* –õ–µ–≥–µ–Ω–¥–∞ —Å–æ–±—ã—Ç–∏–π */}
        <div className="bg-white rounded-2xl shadow-md p-6 mb-6">
          <h2 className="text-xl font-semibold text-gray-800 mb-4">–õ–µ–≥–µ–Ω–¥–∞ —Å–æ–±—ã—Ç–∏–π</h2>
          <div className="flex flex-wrap gap-4">
            {eventTypes.map((type, index) => (
              <div key={index} className="flex items-center">
                <span className="text-lg mr-2">{type.icon}</span>
                <div className="w-4 h-4 rounded-full mr-2" style={{ backgroundColor: type.color }}></div>
                <span className="text-sm text-gray-700">{type.label}</span>
              </div>
            ))}
          </div>
        </div>

        {/* –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–æ–≤ –∏ —ç–∫—Å–ø–æ—Ä—Ç */}
        <div className="flex flex-wrap justify-between items-center mb-6 gap-4">
          <div className="flex gap-2">
            <button
              onClick={() => setCalendarView('dayGridMonth')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                calendarView === 'dayGridMonth'
                  ? 'bg-blue-600 text-white'
                  : 'bg-white text-gray-700 hover:bg-gray-100'
              }`}
            >
              –ú–µ—Å—è—Ü
            </button>
            <button
              onClick={() => setCalendarView('timeGridWeek')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                calendarView === 'timeGridWeek'
                  ? 'bg-blue-600 text-white'
                  : 'bg-white text-gray-700 hover:bg-gray-100'
              }`}
            >
              –ù–µ–¥–µ–ª—è
            </button>
            <button
              onClick={() => setCalendarView('timeGridDay')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                calendarView === 'timeGridDay'
                  ? 'bg-blue-600 text-white'
                  : 'bg-white text-gray-700 hover:bg-gray-100'
              }`}
            >
              –î–µ–Ω—å
            </button>
            <button
              onClick={() => setCalendarView('listMonth')}
              className={`px-4 py-2 rounded-lg font-medium transition-colors ${
                calendarView === 'listMonth'
                  ? 'bg-blue-600 text-white'
                  : 'bg-white text-gray-700 hover:bg-gray-100'
              }`}
            >
              –°–ø–∏—Å–æ–∫
            </button>
          </div>

          <div className="flex gap-2">
            <button
              onClick={() => {
                // –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                const icsContent = `BEGIN:VCALENDAR
VERSION:2.0
${calendarEvents.map(event => `
BEGIN:VEVENT
SUMMARY:${event.title}
DTSTART:${event.start.replace(/-/g, '')}
DTEND:${event.end ? event.end.replace(/-/g, '') : event.start.replace(/-/g, '')}
DESCRIPTION:${event.description}
END:VEVENT
`).join('')}
END:VCALENDAR`;

                const blob = new Blob([icsContent], { type: 'text/calendar' });
                const url = URL.createObjectURL(blob);
                const link = document.createElement('a');
                link.href = url;
                link.download = 'academic_calendar.ics';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
              }}
              className="px-4 py-2 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors"
            >
              –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
            </button>
          </div>
        </div>

        {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å */}
        <div className="bg-white rounded-2xl shadow-md p-6">
          <FullCalendar
            plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin]}
            initialView="dayGridMonth"
            headerToolbar={{
              left: 'prev,next today',
              center: 'title',
              right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
            }}
            views={{
              dayGridMonth: { buttonText: '–ú–µ—Å—è—Ü' },
              timeGridWeek: { buttonText: '–ù–µ–¥–µ–ª—è' },
              timeGridDay: { buttonText: '–î–µ–Ω—å' },
              listMonth: { buttonText: '–°–ø–∏—Å–æ–∫' }
            }}
            events={calendarEvents}
            eventContent={eventContent}
            eventClick={(info) => {
              info.jsEvent.preventDefault();
              
              // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ —Å–æ–±—ã—Ç–∏—è
              if (info.event) {
                const event = info.event;
                const modal = document.createElement('div');
                modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
                modal.innerHTML = `
                  <div class="bg-white rounded-2xl p-6 max-w-md w-full mx-4">
                    <div class="flex justify-between items-center mb-4">
                      <h3 class="text-xl font-bold">${event.title}</h3>
                      <button class="text-gray-400 hover:text-gray-600" onclick="this.closest('.fixed').remove()">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                      </button>
                    </div>
                    <div class="mb-4">
                      <div class="flex items-center mb-2">
                        <div class="w-4 h-4 rounded-full mr-2" style="background-color: ${event.backgroundColor}"></div>
                        <span class="text-sm text-gray-600">${event.extendedProps.type}</span>
                      </div>
                      <p class="text-gray-700">${event.extendedProps.description}</p>
                    </div>
                    <div class="flex gap-2">
                      <button class="flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700" onclick="window.open('https://www.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(event.title)}&dates=${event.startStr.replace(/-/g, '')}/${event.endStr ? event.endStr.replace(/-/g, '') : event.startStr.replace(/-/g, '')}&details=${encodeURIComponent(event.extendedProps.description)}', '_blank')">
                        Google Calendar
                      </button>
                      <button class="flex-1 border border-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-50" onclick="
                        const icsContent = 'BEGIN:VCALENDAR\\nVERSION:2.0\\nBEGIN:VEVENT\\nSUMMARY:${event.title}\\nDTSTART:${event.startStr.replace(/-/g, '').replace(/:/g, '')}\\nDTEND:${event.endStr ? event.endStr.replace(/-/g, '').replace(/:/g, '') : event.startStr.replace(/-/g, '').replace(/:/g, '')}\\nDESCRIPTION:${event.extendedProps.description}\\nEND:VEVENT\\nEND:VCALENDAR';
                        const blob = new Blob([icsContent], { type: 'text/calendar' });
                        const url = URL.createObjectURL(blob);
                        const link = document.createElement('a');
                        link.href = url;
                        link.download = '${event.title}.ics';
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);
                      ">
                        –°–∫–∞—á–∞—Ç—å .ics
                      </button>
                    </div>
                  </div>
                `;
                document.body.appendChild(modal);
                
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                modal.addEventListener('click', (e) => {
                  if (e.target === modal) {
                    modal.remove();
                  }
                });
              }
            }}
            locale="ru"
            buttonText={{
              today: '–°–µ–≥–æ–¥–Ω—è',
              month: '–ú–µ—Å—è—Ü',
              week: '–ù–µ–¥–µ–ª—è',
              day: '–î–µ–Ω—å',
              list: '–°–ø–∏—Å–æ–∫'
            }}
            height="auto"
            contentHeight="auto"
            eventDisplay="block"
            eventTimeFormat={{
              hour: '2-digit',
              minute: '2-digit',
              meridiem: false
            }}
          />
        </div>
      </div>
    </div>
  );
};

export default Calendar;