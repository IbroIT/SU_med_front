import React, { useState } from 'react';
import { useTranslation } from 'react-i18next';
import './About.css';

const Documents = () => {
  const { t } = useTranslation();
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [sortBy, setSortBy] = useState('date');
  const [sortOrder, setSortOrder] = useState('desc');

  const documentCategories = [
    { value: 'all', label: '–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã' },
    { value: 'charter', label: '–£—á—Ä–µ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã' },
    { value: 'license', label: '–õ–∏—Ü–µ–Ω–∑–∏—è –∏ –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏—è' },
    { value: 'reports', label: '–û—Ç—á–µ—Ç—ã –æ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏' },
    { value: 'regulations', label: '–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç—ã' }
  ];

  const documents = [
    {
      id: 1,
      name: '–£—Å—Ç–∞–≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞',
      description: '–û—Å–Ω–æ–≤–Ω–æ–π —É—á—Ä–µ–¥–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –∏–º–µ–Ω–∏ –°–∞–ª—ã–º–±–µ–∫–æ–≤–∞',
      category: 'charter',
      type: 'pdf',
      size: '2.5 MB',
      date: '2023-01-15',
      downloadCount: 342,
      version: '3.1',
      language: 'ru',
      pages: 45,
      validUntil: '2028-01-15'
    },
    {
      id: 2,
      name: '–õ–∏—Ü–µ–Ω–∑–∏—è –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
      description: '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è –Ω–∞ –≤–µ–¥–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
      category: 'license',
      type: 'pdf',
      size: '1.8 MB',
      date: '2023-08-20',
      downloadCount: 598,
      version: '2.0',
      language: 'ru',
      pages: 12,
      validUntil: '2028-08-20'
    },
    {
      id: 3,
      name: '–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏',
      description: '–î–æ–∫—É–º–µ–Ω—Ç –æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –∞–∫–∫—Ä–µ–¥–∏—Ç–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º',
      category: 'license',
      type: 'pdf',
      size: '1.2 MB',
      date: '2023-06-10',
      downloadCount: 445,
      version: '1.2',
      language: 'ru',
      pages: 8,
      validUntil: '2029-06-10'
    },
    {
      id: 4,
      name: '–û—Ç—á–µ—Ç –æ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ 2023',
      description: '–ì–æ–¥–æ–≤–æ–π –æ—Ç—á–µ—Ç –æ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –∑–∞ 2023 –≥–æ–¥',
      category: 'reports',
      type: 'pdf',
      size: '4.2 MB',
      date: '2024-03-01',
      downloadCount: 234,
      version: '1.0',
      language: 'ru',
      pages: 128
    },
    {
      id: 5,
      name: '–ü—Ä–∞–≤–∏–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ä–∞—Å–ø–æ—Ä—è–¥–∫–∞',
      description: '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞',
      category: 'regulations',
      type: 'pdf',
      size: '890 KB',
      date: '2023-09-05',
      downloadCount: 156,
      version: '2.3',
      language: 'ru',
      pages: 24
    },
    {
      id: 6,
      name: '–ü–æ–ª–æ–∂–µ–Ω–∏–µ –æ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–º —Å–æ–≤–µ—Ç–µ',
      description: '–†–µ–≥–ª–∞–º–µ–Ω—Ç —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      category: 'regulations',
      type: 'doc',
      size: '520 KB',
      date: '2023-11-12',
      downloadCount: 89,
      version: '1.5',
      language: 'ru',
      pages: 16
    },
    {
      id: 7,
      name: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç 2023',
      description: '–û—Ç—á–µ—Ç –æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ-—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞',
      category: 'reports',
      type: 'xlsx',
      size: '1.1 MB',
      date: '2024-02-15',
      downloadCount: 67,
      version: '1.0',
      language: 'ru',
      sheets: 15
    },
    {
      id: 8,
      name: 'Charter of the University',
      description: 'Main founding document of Salymbekov University (English version)',
      category: 'charter',
      type: 'pdf',
      size: '2.7 MB',
      date: '2023-01-15',
      downloadCount: 78,
      version: '3.1',
      language: 'en',
      pages: 48,
      validUntil: '2028-01-15'
    }
  ];

  const getFileIcon = (type) => {
    switch (type) {
      case 'pdf': return 'üìÑ';
      case 'doc': return 'üìù';
      case 'docx': return 'üìù';
      case 'xlsx': return 'üìä';
      case 'xls': return 'üìä';
      default: return 'üìÑ';
    }
  };

  const getCategoryBadge = (category) => {
    const categoryConfig = {
      charter: { color: 'bg-purple-100 text-purple-800', label: '–£—Å—Ç–∞–≤' },
      license: { color: 'bg-green-100 text-green-800', label: '–õ–∏—Ü–µ–Ω–∑–∏—è' },
      reports: { color: 'bg-blue-100 text-blue-800', label: '–û—Ç—á–µ—Ç—ã' },
      regulations: { color: 'bg-orange-100 text-orange-800', label: '–†–µ–≥–ª–∞–º–µ–Ω—Ç—ã' }
    };

    const config = categoryConfig[category] || { color: 'bg-gray-100 text-gray-800', label: '–î–æ–∫—É–º–µ–Ω—Ç' };
    
    return (
      <span className={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${config.color}`}>
        {config.label}
      </span>
    );
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  const filteredDocuments = documents.filter(doc => 
    selectedCategory === 'all' || doc.category === selectedCategory
  );

  const sortedDocuments = [...filteredDocuments].sort((a, b) => {
    let aValue, bValue;
    
    switch (sortBy) {
      case 'name':
        aValue = a.name.toLowerCase();
        bValue = b.name.toLowerCase();
        break;
      case 'date':
        aValue = new Date(a.date);
        bValue = new Date(b.date);
        break;
      case 'downloads':
        aValue = a.downloadCount;
        bValue = b.downloadCount;
        break;
      case 'size':
        aValue = parseFloat(a.size);
        bValue = parseFloat(b.size);
        break;
      default:
        return 0;
    }

    if (sortOrder === 'asc') {
      return aValue > bValue ? 1 : -1;
    } else {
      return aValue < bValue ? 1 : -1;
    }
  });

  const handleDownload = (document) => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    console.log(`Downloading ${document.name}`);
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π
    document.downloadCount += 1;
  };

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      {/* Breadcrumbs */}
      <div className="bg-blue-50 rounded-lg p-3 mb-6">
        <nav className="flex items-center text-sm text-gray-600">
          <a href="/" className="hover:text-blue-600">–ì–ª–∞–≤–Ω–∞—è</a>
          <span className="mx-2">‚Üí</span>
          <a href="/about" className="hover:text-blue-600">–û –Ω–∞—Å</a>
          <span className="mx-2">‚Üí</span>
          <span className="text-blue-600">–£—Å—Ç–∞–≤ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã</span>
        </nav>
      </div>

      {/* Header */}
      <div className="text-center mb-12">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">
          –î–æ–∫—É–º–µ–Ω—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
        </h1>
        <p className="text-xl text-gray-600 max-w-3xl mx-auto">
          –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –æ—Ç—á–µ—Ç—ã –∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –∏–º–µ–Ω–∏ –°–∞–ª—ã–º–±–µ–∫–æ–≤–∞
        </p>
      </div>

      {/* Filters and Controls */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
        <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
          {/* Category Filter */}
          <div className="flex flex-wrap gap-2">
            {documentCategories.map(category => (
              <button
                key={category.value}
                onClick={() => setSelectedCategory(category.value)}
                className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                  selectedCategory === category.value
                    ? 'bg-blue-600 text-white'
                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                }`}
              >
                {category.label}
              </button>
            ))}
          </div>

          {/* Sort Controls */}
          <div className="flex items-center gap-3">
            <label className="text-sm font-medium text-gray-700">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</label>
            <select
              value={sortBy}
              onChange={(e) => setSortBy(e.target.value)}
              className="rounded-md border-gray-300 text-sm focus:border-blue-500 focus:ring-blue-500"
            >
              <option value="date">–ü–æ –¥–∞—Ç–µ</option>
              <option value="name">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
              <option value="downloads">–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏</option>
              <option value="size">–ü–æ —Ä–∞–∑–º–µ—Ä—É</option>
            </select>
            <button
              onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}
              className="p-2 rounded-md border border-gray-300 hover:bg-gray-50 transition-colors"
              title={sortOrder === 'asc' ? '–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é' : '–ü–æ —É–±—ã–≤–∞–Ω–∏—é'}
            >
              {sortOrder === 'asc' ? '‚Üë' : '‚Üì'}
            </button>
          </div>
        </div>
      </div>

      {/* Documents Table */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-x-auto">
        <table className="min-w-full divide-y divide-gray-200">
          <thead className="bg-gray-50">
            <tr>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer" onClick={() => setSortBy('name')}>
                –ù–∞–∑–≤–∞–Ω–∏–µ {sortBy === 'name' && (sortOrder === 'asc' ? '‚Üë' : '‚Üì')}
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                –¢–∏–ø
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer" onClick={() => setSortBy('date')}>
                –î–∞—Ç–∞ {sortBy === 'date' && (sortOrder === 'asc' ? '‚Üë' : '‚Üì')}
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer" onClick={() => setSortBy('size')}>
                –†–∞–∑–º–µ—Ä {sortBy === 'size' && (sortOrder === 'asc' ? '‚Üë' : '‚Üì')}
              </th>
              <th scope="col" className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                –°–∫–∞—á–∞—Ç—å
              </th>
            </tr>
          </thead>
          <tbody className="bg-white divide-y divide-gray-200">
            {sortedDocuments.map((doc) => (
              <tr key={doc.id} className="hover:bg-gray-50">
                <td className="px-6 py-4">
                  <div className="flex items-center">
                    <div className="text-2xl mr-3">{getFileIcon(doc.type)}</div>
                    <div>
                      <div className="text-sm font-medium text-gray-900">{doc.name}</div>
                      <div className="text-xs text-gray-500">{doc.description}</div>
                    </div>
                  </div>
                </td>
                <td className="px-6 py-4 whitespace-nowrap">
                  <span className="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800 uppercase">{doc.type}</span>
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                  {formatDate(doc.date)}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                  {doc.size}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-center">
                  <button
                    onClick={() => handleDownload(doc)}
                    className="text-blue-600 hover:text-blue-800 text-xl"
                    title="–°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç"
                  >
                    üì•
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* Empty State */}
      {sortedDocuments.length === 0 && (
        <div className="text-center py-12">
          <div className="text-6xl mb-4">üìÑ</div>
          <h3 className="text-lg font-medium text-gray-900 mb-2">
            –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
          </h3>
          <p className="text-gray-500">
            –í –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
          </p>
        </div>
      )}

      {/* Statistics */}
      <div className="mt-12 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-8">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
          <div className="text-center">
            <div className="text-3xl font-bold text-blue-600 mb-2">
              {documents.length}
            </div>
            <div className="text-sm text-gray-600">–í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</div>
          </div>
          
          <div className="text-center">
            <div className="text-3xl font-bold text-green-600 mb-2">
              {documents.reduce((sum, doc) => sum + doc.downloadCount, 0)}
            </div>
            <div className="text-sm text-gray-600">–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π</div>
          </div>
          
          <div className="text-center">
            <div className="text-3xl font-bold text-purple-600 mb-2">
              {documents.filter(doc => doc.validUntil && new Date(doc.validUntil) > new Date()).length}
            </div>
            <div className="text-sm text-gray-600">–î–µ–π—Å—Ç–≤—É—é—â–∏—Ö –ª–∏—Ü–µ–Ω–∑–∏–π</div>
          </div>
          
          <div className="text-center">
            <div className="text-3xl font-bold text-orange-600 mb-2">
              {new Set(documents.map(doc => doc.language)).size}
            </div>
            <div className="text-sm text-gray-600">–Ø–∑—ã–∫–æ–≤</div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Documents;
