import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { useTranslation } from 'react-i18next';
import { Bell, Calendar, Download, ExternalLink, Pin } from 'lucide-react';

const API_BASE_URL = 'http://localhost:8000/api';

const NewsAnnouncements = () => {
  const { t, i18n } = useTranslation();
  const [filter, setFilter] = useState('all');
  const [announcements, setAnnouncements] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetchAnnouncements();
  }, [i18n.language]);

  const fetchAnnouncements = async () => {
    try {
      setLoading(true);
      const response = await fetch(`${API_BASE_URL}/announcements/`, {
        headers: {
          'Accept-Language': i18n.language === 'kg' ? 'ky' : i18n.language,
          'Content-Type': 'application/json'
        }
      });
      if (!response.ok) {
        throw new Error(t('news.announcements.loadError', '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π'));
      }
      const data = await response.json();
      setAnnouncements(data.results || data);
    } catch (err) {
      setError(err.message);
      // Fallback –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π
      setAnnouncements([
    {
      id: 1,
      title: "–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –∑–∏–º–Ω–µ–π —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ 2024-2025",
      date: "2024-11-25",
      type: "academic",
      priority: "high",
      deadline: "2025-01-15",
      description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ —ç–∫–∑–∞–º–µ–Ω–æ–≤, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö –∫ –¥–æ–ø—É—Å–∫—É –∏ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∑–∏–º–Ω–µ–π —Å–µ—Å—Å–∏–∏.",
      content: "–ó–∏–º–Ω—è—è —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤ –Ω–∞—á–Ω–µ—Ç—Å—è 20 –¥–µ–∫–∞–±—Ä—è 2024 –≥–æ–¥–∞. –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –¥–æ 15 –¥–µ–∫–∞–±—Ä—è.",
      attachment: "winter_session_schedule.pdf",
      pinned: true
    },
    {
      id: 2,
      title: "–°—Ç–∏–ø–µ–Ω–¥–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –æ—Ç–ª–∏—á–Ω–∏–∫–æ–≤ –æ–±—É—á–µ–Ω–∏—è",
      date: "2024-11-20",
      type: "scholarship",
      priority: "high",
      deadline: "2024-12-10",
      description: "–û—Ç–∫—Ä—ã—Ç–∞ –ø–æ–¥–∞—á–∞ –∑–∞—è–≤–ª–µ–Ω–∏–π –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Å—Ç–∏–ø–µ–Ω–¥–∏–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –≤—ã—Å–æ–∫–∏–º–∏ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏.",
      content: "–°—Ç—É–¥–µ–Ω—Ç—ã, –∏–º–µ—é—â–∏–µ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –Ω–µ –Ω–∏–∂–µ 4.5, –º–æ–≥—É—Ç –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–Ω—É—é —Å—Ç–∏–ø–µ–Ω–¥–∏—é. –†–∞–∑–º–µ—Ä —Å—Ç–∏–ø–µ–Ω–¥–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 15,000 —Å–æ–º.",
      attachment: "scholarship_application_form.pdf",
      pinned: true
    },
    {
      id: 3,
      title: "–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∑–∞–Ω—è—Ç–∏–π –Ω–∞ –¥–µ–∫–∞–±—Ä—å",
      date: "2024-11-18",
      type: "schedule",
      priority: "medium",
      deadline: null,
      description: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∑–∞–Ω—è—Ç–∏–π –≤ —Å–≤—è–∑–∏ —Å –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–º–∏ –¥–Ω—è–º–∏ –≤ –¥–µ–∫–∞–±—Ä–µ.",
      content: "–í —Å–≤—è–∑–∏ —Å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞–º–∏, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π —Å 30 –¥–µ–∫–∞–±—Ä—è –ø–æ 8 —è–Ω–≤–∞—Ä—è –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ.",
      attachment: "december_schedule_changes.pdf",
      pinned: false
    },
    {
      id: 4,
      title: "–ö–æ–Ω–∫—É—Ä—Å –Ω–∞—É—á–Ω—ã—Ö —Ä–∞–±–æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
      date: "2024-11-15",
      type: "competition",
      priority: "medium",
      deadline: "2025-02-28",
      description: "–û–±—ä—è–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–≥–æ–¥–Ω—ã–π –∫–æ–Ω–∫—É—Ä—Å –Ω–∞—É—á–Ω—ã—Ö —Ä–∞–±–æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.",
      content: "–ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –Ω–∞—É—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –ø–æ –≤—Å–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º –º–µ–¥–∏—Ü–∏–Ω—ã. –õ—É—á—à–∏–µ —Ä–∞–±–æ—Ç—ã –±—É–¥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏.",
      attachment: "research_competition_rules.pdf",
      pinned: false
    },
    {
      id: 5,
      title: "–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
      date: "2024-11-10",
      type: "health",
      priority: "medium",
      deadline: "2024-12-20",
      description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–Ω–æ–≤–æ–π –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ—Ç–∏–≤ –≥—Ä–∏–ø–ø–∞ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.",
      content: "–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ –≤ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ø–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏.",
      attachment: null,
      pinned: false
    },
    {
      id: 6,
      title: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è",
      date: "2024-11-05",
      type: "technical",
      priority: "low",
      deadline: null,
      description: "–ü–ª–∞–Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.",
          content: "–°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ 15 –Ω–æ—è–±—Ä—è —Å 02:00 –¥–æ 06:00. –í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.",
          attachment: null,
          pinned: false
        }
      ]);
    }
    setLoading(false);
  };

  const filteredAnnouncements = filter === 'all' 
    ? announcements 
    : announcements.filter(item => item.type === filter);

  const pinnedAnnouncements = announcements.filter(item => item.pinned);
  const regularAnnouncements = filteredAnnouncements.filter(item => !item.pinned);

  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    });
  };

  const getTypeInfo = (type) => {
    const types = {
      academic: { name: '–£—á–µ–±–Ω–æ–µ', color: 'bg-blue-100 text-blue-800', icon: 'üìö' },
      scholarship: { name: '–°—Ç–∏–ø–µ–Ω–¥–∏—è', color: 'bg-green-100 text-green-800', icon: 'üí∞' },
      schedule: { name: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', color: 'bg-purple-100 text-purple-800', icon: 'üìÖ' },
      competition: { name: '–ö–æ–Ω–∫—É—Ä—Å', color: 'bg-orange-100 text-orange-800', icon: 'üèÜ' },
      health: { name: '–ó–¥–æ—Ä–æ–≤—å–µ', color: 'bg-red-100 text-red-800', icon: 'üè•' },
      technical: { name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ', color: 'bg-gray-100 text-gray-800', icon: '‚öôÔ∏è' }
    };
    return types[type] || types.academic;
  };

  const getPriorityColor = (priority) => {
    switch(priority) {
      case 'high': return 'border-l-red-500';
      case 'medium': return 'border-l-yellow-500';
      case 'low': return 'border-l-green-500';
      default: return 'border-l-gray-300';
    }
  };

  const isDeadlineApproaching = (deadline) => {
    if (!deadline) return false;
    const deadlineDate = new Date(deadline);
    const today = new Date();
    const diffTime = deadlineDate - today;
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    return diffDays <= 7 && diffDays >= 0;
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Hero Section */}
      <div className="bg-gradient-to-r from-yellow-600 to-yellow-800 text-white py-16">
        <div className="container mx-auto px-4">
          <div className="text-center">
            <h1 className="text-4xl md:text-5xl font-bold mb-4">
              –û–±—ä—è–≤–ª–µ–Ω–∏—è
            </h1>
            <p className="text-xl text-yellow-100 max-w-2xl mx-auto">
              –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
            </p>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-4 py-12">
        {/* Pinned Announcements */}
        {pinnedAnnouncements.length > 0 && (
          <div className="mb-12">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 flex items-center">
              <Pin className="w-6 h-6 mr-2 text-red-500" />
              –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            </h2>
            <div className="space-y-4">
              {pinnedAnnouncements.map((item) => {
                const typeInfo = getTypeInfo(item.type);
                return (
                  <div key={item.id} className={`bg-white rounded-xl shadow-md p-6 border-l-4 ${getPriorityColor(item.priority)}`}>
                    <div className="flex flex-wrap items-start justify-between gap-4">
                      <div className="flex-1 min-w-0">
                        <div className="flex items-center gap-3 mb-3">
                          <span className="text-2xl">{typeInfo.icon}</span>
                          <span className={`px-3 py-1 rounded-full text-sm font-semibold ${typeInfo.color}`}>
                            {typeInfo.name}
                          </span>
                          {isDeadlineApproaching(item.deadline) && (
                            <span className="bg-red-100 text-red-800 px-2 py-1 rounded text-xs font-semibold animate-pulse">
                              –°—Ä–æ—á–Ω–æ
                            </span>
                          )}
                        </div>
                        
                        <h3 className="text-xl font-bold text-gray-800 mb-2">
                          {item.title}
                        </h3>
                        
                        <p className="text-gray-600 mb-4">
                          {item.content}
                        </p>
                        
                        <div className="flex flex-wrap items-center gap-4 text-sm text-gray-500">
                          <div className="flex items-center">
                            <Calendar className="w-4 h-4 mr-1" />
                            {formatDate(item.date)}
                          </div>
                          {item.deadline && (
                            <div className={`flex items-center ${isDeadlineApproaching(item.deadline) ? 'text-red-600 font-semibold' : ''}`}>
                              <Bell className="w-4 h-4 mr-1" />
                              –î–æ: {formatDate(item.deadline)}
                            </div>
                          )}
                        </div>
                      </div>
                      
                      <div className="flex flex-col gap-2">
                        {item.attachment && (
                          <button className="flex items-center text-blue-600 hover:text-blue-800 text-sm font-semibold transition-colors">
                            <Download className="w-4 h-4 mr-1" />
                            –°–∫–∞—á–∞—Ç—å
                          </button>
                        )}
                        <Link 
                          to={`/news/detail/${item.id}`}
                          className="flex items-center text-gray-600 hover:text-gray-800 text-sm transition-colors"
                        >
                          <ExternalLink className="w-4 h-4 mr-1" />
                          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                        </Link>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        )}

        {/* Filter Tabs */}
        <div className="flex flex-wrap justify-center gap-2 mb-8">
          <button
            onClick={() => setFilter('all')}
            className={`px-6 py-3 rounded-full font-semibold transition-colors ${
              filter === 'all'
                ? 'bg-yellow-600 text-white'
                : 'bg-white text-gray-600 hover:bg-yellow-50'
            }`}
          >
            –í—Å–µ
          </button>
          <button
            onClick={() => setFilter('academic')}
            className={`px-6 py-3 rounded-full font-semibold transition-colors ${
              filter === 'academic'
                ? 'bg-yellow-600 text-white'
                : 'bg-white text-gray-600 hover:bg-yellow-50'
            }`}
          >
            –£—á–µ–±–Ω—ã–µ
          </button>
          <button
            onClick={() => setFilter('scholarship')}
            className={`px-6 py-3 rounded-full font-semibold transition-colors ${
              filter === 'scholarship'
                ? 'bg-yellow-600 text-white'
                : 'bg-white text-gray-600 hover:bg-yellow-50'
            }`}
          >
            –°—Ç–∏–ø–µ–Ω–¥–∏–∏
          </button>
          <button
            onClick={() => setFilter('competition')}
            className={`px-6 py-3 rounded-full font-semibold transition-colors ${
              filter === 'competition'
                ? 'bg-yellow-600 text-white'
                : 'bg-white text-gray-600 hover:bg-yellow-50'
            }`}
          >
            –ö–æ–Ω–∫—É—Ä—Å—ã
          </button>
        </div>

        {/* Regular Announcements */}
        <div className="space-y-6">
          {regularAnnouncements.map((item) => {
            const typeInfo = getTypeInfo(item.type);
            return (
              <div key={item.id} className={`bg-white rounded-xl shadow-sm p-6 border-l-4 ${getPriorityColor(item.priority)} hover:shadow-md transition-shadow`}>
                <div className="flex flex-wrap items-start justify-between gap-4">
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center gap-3 mb-3">
                      <span className="text-lg">{typeInfo.icon}</span>
                      <span className={`px-2 py-1 rounded-full text-xs font-semibold ${typeInfo.color}`}>
                        {typeInfo.name}
                      </span>
                      {isDeadlineApproaching(item.deadline) && (
                        <span className="bg-red-100 text-red-800 px-2 py-1 rounded text-xs font-semibold">
                          –°—Ä–æ—á–Ω–æ
                        </span>
                      )}
                    </div>
                    
                    <h3 className="text-lg font-bold text-gray-800 mb-2">
                      {item.title}
                    </h3>
                    
                    <p className="text-gray-600 mb-3 text-sm">
                      {item.description}
                    </p>
                    
                    <div className="flex flex-wrap items-center gap-4 text-sm text-gray-500">
                      <div className="flex items-center">
                        <Calendar className="w-4 h-4 mr-1" />
                        {formatDate(item.date)}
                      </div>
                      {item.deadline && (
                        <div className={`flex items-center ${isDeadlineApproaching(item.deadline) ? 'text-red-600 font-semibold' : ''}`}>
                          <Bell className="w-4 h-4 mr-1" />
                          –î–æ: {formatDate(item.deadline)}
                        </div>
                      )}
                    </div>
                  </div>
                  
                  <div className="flex flex-col gap-2">
                    {item.attachment && (
                      <button className="flex items-center text-blue-600 hover:text-blue-800 text-sm font-semibold transition-colors">
                        <Download className="w-4 h-4 mr-1" />
                        {item.attachment}
                      </button>
                    )}
                    <Link 
                      to={`/news/detail/${item.id}`}
                      className="flex items-center text-gray-600 hover:text-gray-800 text-sm transition-colors"
                    >
                      <ExternalLink className="w-4 h-4 mr-1" />
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </Link>
                  </div>
                </div>
              </div>
            );
          })}
        </div>

        {filteredAnnouncements.length === 0 && (
          <div className="text-center py-12">
            <div className="text-gray-500 text-lg">
              –í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç
            </div>
          </div>
        )}

        {/* Newsletter Subscription */}
        <div className="mt-16 bg-gradient-to-r from-yellow-500 to-yellow-600 text-white rounded-xl p-8">
          <div className="text-center">
            <h2 className="text-2xl font-bold mb-4">
              –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –≤–∞–∂–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            </h2>
            <p className="mb-6">
              –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–∞ email
            </p>
            <div className="flex flex-col sm:flex-row gap-4 max-w-md mx-auto">
              <input 
                type="email" 
                placeholder="–í–∞—à email –∞–¥—Ä–µ—Å"
                className="flex-1 px-4 py-3 rounded-lg text-gray-900 placeholder-gray-500"
              />
              <button className="bg-white text-yellow-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default NewsAnnouncements;
